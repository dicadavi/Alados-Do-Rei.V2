import { AvatarPart, AvatarPartProps } from "../types";

const hats: Record<string, AvatarPart> = {
  default: (props: AvatarPartProps) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || 100}
      height={props.height || 100}
      viewBox="0 0 495.87 685"
      {...props}
    >
      <path
        d="M 20 30 Q 50 10 80 30"
        stroke="brown"
        fill="none"
        strokeWidth="4"
      />
    </svg>
  ),
  Group: (props: AvatarPartProps) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || 100}
      height={props.height || 100}
      viewBox="0 0 495.87 685"
      {...props}
    >
      <g>
        <path
          d="M205.000,685.000C137.013,685.000,69.026,685.000,1.019,685.000C1.019,457.056,1.019,229.111,1.019,1.083C165.913,1.083,330.827,1.083,495.870,1.083C495.870,229.000,495.870,457.000,495.870,685.000C427.568,685.000,359.248,685.000,290.564,684.540C290.425,653.635,290.649,623.191,291.156,593.017C291.961,594.850,292.501,596.407,293.005,597.975C298.151,613.991,303.291,630.009,308.480,646.439C310.431,652.865,312.025,659.000,314.305,664.869C318.869,676.620,330.387,681.676,342.403,677.575C352.912,673.989,358.724,662.264,355.482,650.818C353.764,644.750,351.711,638.777,349.811,632.397C334.389,582.997,319.609,533.746,303.285,485.011C294.243,458.015,288.011,431.036,291.065,402.369C302.203,402.265,312.856,402.175,323.506,402.270C350.854,402.514,374.605,383.420,377.854,356.455C379.773,340.531,378.711,324.245,378.961,308.122C379.022,304.181,378.970,300.238,378.970,296.468C383.473,296.127,387.543,296.369,391.319,295.429C402.319,292.691,409.479,285.530,411.614,274.436C413.992,262.077,409.316,252.273,398.807,244.991C401.238,235.611,397.806,229.297,390.020,224.648C386.365,222.465,383.143,219.559,379.765,216.512C379.819,206.222,379.933,196.399,379.829,186.578C379.541,159.445,370.092,136.125,350.129,117.533C336.279,104.635,320.037,96.327,300.647,93.867C292.170,93.530,284.060,93.372,275.538,93.180C271.770,93.417,268.414,93.687,265.018,93.568C262.999,82.652,258.217,78.717,247.609,78.885C238.220,79.033,233.505,83.569,231.519,93.982C228.079,93.746,225.063,93.487,221.612,93.154C212.784,93.397,204.391,93.714,195.582,94.012C183.902,95.364,173.561,99.392,163.842,105.075C139.090,119.550,123.329,140.869,119.078,169.149C116.721,184.828,117.764,201.019,117.085,217.272C113.673,219.901,110.621,222.531,107.194,224.512C99.117,229.183,95.670,235.688,97.849,245.096C86.315,252.773,81.206,263.865,84.907,275.579C86.529,280.710,89.901,285.703,93.644,289.656C100.048,296.422,108.807,297.059,118.050,295.725C118.050,297.848,118.049,299.311,118.050,300.774C118.055,316.746,118.037,332.717,118.071,348.689C118.130,376.424,140.982,400.717,168.608,402.007C180.718,402.573,192.865,402.345,204.986,402.914C204.985,405.515,205.031,407.679,204.993,409.841C204.696,426.707,205.684,443.385,200.038,460.080C186.292,500.726,173.912,541.834,161.074,582.786C155.859,599.419,150.884,616.128,145.612,633.114C143.570,639.453,141.542,645.433,139.903,651.518C136.901,662.670,142.815,674.044,153.269,677.656C164.727,681.614,176.317,676.779,180.839,665.625C183.449,659.187,185.180,652.392,187.509,645.490C193.441,627.203,199.169,609.185,204.897,591.625C204.931,623.056,204.966,654.028,205.000,685.000Z"
          fill="#4B4B4B"
        />
        <path
          d="M265.057,93.958C268.414,93.687,271.770,93.417,275.701,93.468C279.194,95.336,282.091,96.925,285.033,98.424C309.698,110.994,323.908,130.566,324.940,158.689C325.336,169.492,325.029,180.320,324.625,191.121C322.099,190.675,319.948,190.391,317.887,189.795C280.054,178.851,241.771,176.729,203.061,184.138C192.634,186.134,182.330,188.765,171.978,190.625C171.992,180.839,171.970,171.533,172.005,162.227C172.113,133.126,185.764,112.385,211.155,98.915C214.774,96.996,218.416,95.122,222.047,93.227C225.063,93.487,228.079,93.746,231.937,94.040C243.546,95.996,254.305,95.868,265.057,93.958Z"
          fill="#9069CD"
        />
        <path
          d="M171.969,191.104C182.330,188.765,192.634,186.134,203.061,184.138C241.771,176.729,280.054,178.851,317.887,189.795C319.948,190.391,322.099,190.675,324.886,191.334C329.007,192.737,332.451,193.911,336.121,195.352C344.945,199.602,353.605,203.457,362.119,207.610C368.090,210.523,373.863,213.842,379.725,216.980C383.143,219.559,386.365,222.465,390.020,224.648C397.806,229.297,401.238,235.611,398.807,244.991C390.390,254.936,384.453,255.963,374.231,248.755C346.704,229.344,316.379,216.812,283.162,211.453C247.519,205.703,212.537,208.831,178.325,220.277C157.985,227.083,139.317,237.171,121.742,249.425C112.517,255.856,105.152,254.382,98.395,245.154C95.670,235.688,99.117,229.183,107.194,224.512C110.621,222.531,113.673,219.901,117.411,217.186C129.245,211.070,140.558,205.325,151.883,199.605C154.940,198.061,158.034,196.592,161.490,195.058C165.237,193.720,168.603,192.412,171.969,191.104Z"
          fill="#7347B7"
        />
        <path
          d="M161.110,195.088C158.034,196.592,154.940,198.061,151.883,199.605C140.558,205.325,129.245,211.070,117.601,216.892C117.764,201.019,116.721,184.828,119.078,169.149C123.329,140.869,139.090,119.550,163.842,105.075C173.561,99.392,183.902,95.364,195.397,94.289C191.170,98.805,186.431,102.772,182.306,107.298C171.058,119.639,163.238,133.888,162.109,150.767C161.125,165.497,161.395,180.311,161.110,195.088Z"
          fill="#9069CC"
        />
        <path
          d="M379.765,216.512C373.863,213.842,368.090,210.523,362.119,207.610C353.605,203.457,344.945,199.602,336.151,194.875C335.970,182.008,336.174,169.882,335.952,157.764C335.677,142.765,331.431,128.749,322.347,116.870C316.051,108.638,308.180,101.610,301.013,94.045C320.037,96.327,336.279,104.635,350.129,117.533C370.092,136.125,379.541,159.445,379.829,186.578C379.933,196.399,379.819,206.222,379.765,216.512Z"
          fill="#9069CC"
        />
        <path
          d="M300.647,93.867C308.180,101.610,316.051,108.638,322.347,116.870C331.431,128.749,335.677,142.765,335.952,157.764C336.174,169.882,335.970,182.008,335.925,194.608C332.451,193.911,329.007,192.737,325.303,191.350C325.029,180.320,325.336,169.492,324.940,158.689C323.908,130.566,309.698,110.994,285.033,98.424C282.091,96.925,279.194,95.336,276.113,93.501C284.060,93.372,292.170,93.530,300.647,93.867Z"
          fill="#8158C2"
        />
        <path
          d="M161.490,195.058C161.395,180.311,161.125,165.497,162.109,150.767C163.238,133.888,171.058,119.639,182.306,107.298C186.431,102.772,191.170,98.805,195.814,94.307C204.391,93.714,212.784,93.397,221.612,93.154C218.416,95.122,214.774,96.996,211.155,98.915C185.764,112.385,172.113,133.126,172.005,162.227C171.970,171.533,171.992,180.839,171.978,190.625C168.603,192.412,165.237,193.720,161.490,195.058Z"
          fill="#8158C2"
        />
        <path
          d="M265.018,93.568C254.305,95.868,243.546,95.996,232.362,94.016C233.505,83.569,238.220,79.033,247.609,78.885C258.217,78.717,262.999,82.652,265.018,93.568Z"
          fill="#7246B6"
        />
      </g>
    </svg>
  ),
  "Group (1)": (props: AvatarPartProps) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || 100}
      height={props.height || 100}
      viewBox="0 0 495.87 685"
      {...props}
    >
      {/* SVG content for Group (1) */}
    </svg>
  ),
  "Group (2)": (props: AvatarPartProps) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || 100}
      height={props.height || 100}
      viewBox="0 0 495.87 685"
      {...props}
    >
      {/* SVG content for Group (2) */}
    </svg>
  ),
  "Group (3)": (props: AvatarPartProps) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || 100}
      height={props.height || 100}
      viewBox="0 0 495.87 685"
      {...props}
    >
      {/* SVG content for Group (3) */}
    </svg>
  ),
  "Group (4)": (props: AvatarPartProps) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || 100}
      height={props.height || 100}
      viewBox="0 0 495.87 685"
      {...props}
    >
      {/* SVG content for Group (4) */}
    </svg>
  ),
  "Group (5)": (props: AvatarPartProps) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || 100}
      height={props.height || 100}
      viewBox="0 0 495.87 685"
      {...props}
    >
      {/* SVG content for Group (5) */}
    </svg>
  ),
  "Group (6)": (props: AvatarPartProps) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || 100}
      height={props.height || 100}
      viewBox="0 0 495.87 685"
      {...props}
    >
      {/* SVG content for Group (6) */}
    </svg>
  ),
  "Group (7)": (props: AvatarPartProps) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || 100}
      height={props.height || 100}
      viewBox="0 0 495.87 685"
      {...props}
    >
      {/* SVG content for Group (7) */}
    </svg>
  ),
  "Group (8)": (props: AvatarPartProps) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || 100}
      height={props.height || 100}
      viewBox="0 0 495.87 685"
      {...props}
    >
      {/* SVG content for Group (8) */}
    </svg>
  ),
  "Group (9)": (props: AvatarPartProps) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || 100}
      height={props.height || 100}
      viewBox="0 0 495.87 685"
      {...props}
    >
      {/* SVG content for Group (9) */}
    </svg>
  ),
  "Group (10)": (props: AvatarPartProps) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || 100}
      height={props.height || 100}
      viewBox="0 0 495.87 685"
      {...props}
    >
      {/* SVG content for Group (10) */}
    </svg>
  ),
  "Group (11)": (props: AvatarPartProps) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || 100}
      height={props.height || 100}
      viewBox="0 0 495.87 685"
      {...props}
    >
      {/* SVG content for Group (11) */}
    </svg>
  ),
};

export const Hat: AvatarPart = (props) => {
  const { id, ...rest } = props;
  const HatComponent = hats[id] || hats.default;
  return <HatComponent id={id} {...rest} />;
};
